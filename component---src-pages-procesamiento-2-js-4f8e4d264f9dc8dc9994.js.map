{"version":3,"sources":["webpack:///./src/pages/procesamiento2.js"],"names":["procesamiento2","src","alt","href"],"mappings":"8FAAA,6CAsCeA,UAnCM,kBACjB,YAAC,IAAD,KACI,yEACA,oVAMA,sKAIA,sBACI,sBAAI,uDACA,qOAIA,mBAAKC,IAAI,0GAA0GC,IAAI,KAC3H,sBAAI,+CAER,uDACA,ybAMA,mBAAKD,IAAI,YAAYC,IAAI,KACzB,uBACA,mBAAKD,IAAI,YAAYC,IAAI,KACzB,qBAAG,gEAAmD,iBAAGC,KAAK,+DAAR","file":"component---src-pages-procesamiento-2-js-4f8e4d264f9dc8dc9994.js","sourcesContent":["import React from \"react\";\r\nimport Layout from '@rocketseat/gatsby-theme-docs/src/components/Layout';\r\n\r\nconst procesamiento2=()=>(\r\n    <Layout>\r\n        <h1>Procesamiento de imagenes y videos por hardware</h1>\r\n        <p>\r\n            Muchas veces cuando los gráficos a manejar son de tamaño considerable y\r\n            es necesario optimizar el procesamiento de los mismos, muchas veces es necesario\r\n            recurrir al uso del GPU mediante shaders. En processing existe una api que nos permite\r\n            utilizar shaders creados en OpenGL más especificamente en el lenguaje GLSL.\r\n        </p>\r\n        <p>\r\n            En esta parte se exploro algunas técnicas básicas de procesamiento de videos  como\r\n            lo son escala de grises usando Luma y detección de bordes.\r\n        </p>\r\n        <ol>\r\n            <li><h2>Escala de grises usando Luma</h2></li>\r\n                <p>\r\n                    Para la escala de grises se utilizo un shader que toma cada frame del video como una textura, la cual\r\n                    es procesada mediante el uso de la GPU de cada pixel en simultaneo y se le aplica la siguiente formula\r\n                </p>\r\n                <img src=\"https://latex.codecogs.com/png.latex?P=0.2126*R&space;&plus;&space;0.7152*G&space;&plus;&space;0.0722*B\" alt=\"\"/>\r\n            <li><h2>Detección de bordes</h2></li>\r\n        </ol>\r\n        <h2>Resultados y algunos gráficos</h2>\r\n        <p>\r\n            A pesar de que se lograron los objetivos propuestos de realizar los diferentes efectos tanto en imagenes como en video\r\n            los resultados obtenidos no fueron los esperados, ya que como se muestra a continuación en los 2 gráficos el uso de shaders\r\n            hizo que el rendimiento del mismo bajara considerablemente aunque como se puede observar al final el rendimiento tanto de shader\r\n            como por software termina siendo muy similar\r\n        </p>\r\n        <img src=\"Tabla.PNG\" alt=\"\"/>\r\n        <br/>\r\n        <img src=\"frame.PNG\" alt=\"\"/>\r\n        <p><strong>Link al repositorio de procesing: </strong><a href=\"https://github.com/CV-UN-2020-II/talleres/tree/main/Taller1\">Taller 1</a></p>\r\n    </Layout>\r\n)\r\nexport default procesamiento2;"],"sourceRoot":""}